#!/usr/bin/env bash

####################################
#                                  #
#  --*--< Global Variables >--*--  #
#                                  #
####################################

# VER DEF
VERSION="0.1"

# DIR DEF
EM_INSTALL="/usr/local/eyou/mail"
EMG_INSTALL="/var/emdg"
EMG_OPT_INSTALL="/opt"
EM_CONFDIR="$EM_INSTALL/etc"
EMG_CONFDIR="$EMG_INSTALL/etc"

# EM FILE DEF
EM_CONFIG="$EM_CONFDIR/eyou_mail.ini"
EM_INIT_CONFIG="$EM_CONFDIR/em_init_config"
EM_MTA_CONFIG="$EM_CONFDIR/em_mta.ini"
EM_PHPD_CONFIG="$EM_CONFDIR/em_phpd.ini"
EM_PLUGIN_CONFIG="$EM_CONFDIR/em_plugins.ini"
EM_MIGRATE_CONFIG="$EM_CONFDIR/em_migrate.ini"

# EMG FILE DEF
EMG_CONFIG="$EMG_CONFDIR/mail.conf"

# MOLE DEF
ESOP_DIR="/usr/local/esop/agent"
MOLE_DIR="$ESOP_DIR/mole"
MOLE_FILE="$MOLE_DIR/sbin/mole"


####################################
#                                  #
#  --*--< Public Functions >--*--  #
#                                  #
####################################

read_conf() {
	local file=$1 config=$2 kvsep=$3
	local result=

	if [ ! -z "${kvsep}" ]; then
		awk="/bin/awk -F"${kvsep}""
	else
		awk="/bin/awk"
	fi

	if [ -f "${file}" -a -s "${file}" ]; then
		result=$( ${awk} '($1~/'$config'\>/) {$1="";print;exit;}' "${file}" 2>&- )
		result=$( echo -e "${result}" | tr -d '[" \t\n]' | sed -e 's/\x00//g;s/\x0D//g' )
	fi
	echo -en "${result}"
}
read_conf "/usr/local/eyou/mail-backup-20140316-161651/etc/eyou_mail.ini" "server_me" "="

read_iniconf() {
	local file=$1 section=$2 config=$3 kvsep=$4
	local result=
	if [ -f "${file}" -a -s "${file}" ]; then
		:
	fi
	echo -en "${result}"
}


####################################
#                                  #
#  --*--< Main Body Begin >--*--   #
#                                  #
####################################


# first collect config stuff
em_start=()
if [ -f "${EM_INIT_CONFIG}" -a -s "${EM_INIT_CONFIG}" ]; then
	em_start=( $(awk 'BEGIN{x=0;y=0} ($0~/^[ \t]*ARRAY_START=\(/){x=1;y=1;next;} \
		($0~/^[ \t]*#/){next;} (x==1 && y==1 && $0~/^[ \t]*\)/){exit;} \
		(x==1 && y==1){print} ' "${EM_INIT_CONFIG}" 2>&-) )
fi



emg_start=()

# process user args
mode="print, config"
