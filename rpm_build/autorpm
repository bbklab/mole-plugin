#!/bin/bash

path=$(cd $(dirname $0) && pwd)
basedir=${path%/*}

show_help(){
cat << HELP 
	${0##*/}  help			# show help
	${0##*/}  clean			# do cleaning job
	${0##*/}  {plugin}		# make rpm for single plugin
	${0##*/}  basic tarball		# make rpm for {basic-group} plugins
	${0##*/}  mail  tarball		# make rpm for {mail-group} plugins
HELP
exit 0
}

# first: clear old files
clean(){
  rm -rf "${path}"/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS} 2>&-
  mkdir -p "${path}"/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS} 2>&-
}
clean
[ "$1" == "clean" ] && exit 0

[ -f "/usr/bin/rpmbuild" -a -x "/usr/bin/rpmbuild" ] || {
	echo "/usr/bin/rpmbuild not prepared"
	exit 1
}

# process cli args
if [ -z "${1}" -o "${1}" == "help" -o "${1}" == "-h" -o "${1}" == "?" ]; then
	show_help
elif [ "${1}" == "basic" -a "${2}" == "tarball" ]; then
	TARMODE=1
elif [ "${1}" == "mail"  -a "${2}" == "tarball" ]; then
	TARMODE=2
else
	show_help
fi

# init {specfile} / {plugins}
specfile=
plugins=()

# set {specfile} / {plugins}
if [ "${TARMODE}" == "1" ]; then	# reset specfile and plugins
  specfile="${path}/spec_files/mole-plugin.spec"
  plugins=( 
       	cpu_usage
       	disk_fs
       	disk_space
 	disk_iostat
       	memory
       	notify_oom
       	notify_syslogin
       	port
 	process
       	sysload
       	tcp_conn
       	traffic
  )
elif [ "${TARMODE}" == "2" ]; then	# reset specfile and plugins
  specfile="${path}/spec_files/esop-plugingroup-mail.spec"
  plugins=( 
	dns_svr
	pop_svr
	http_svr
	imap_svr
	smtp_svr
	emp_mailqueue	
  )
fi

# check {specfile} / {plugins}
if [ -z "${specfile}" ]; then
	echo "spec file not defined";
	exit 1;
else
	if [ -f "${specfile}" -a -s "${specfile}" ]; then
		:
	else
		echo "spec file: [${specfile}] not exists or empty";
		exit 1;
	fi
fi
if [ ${#plugins[*]} -eq 0 ]; then
	echo "array plugins not defined";
	exit 1;
fi

# set {name} / {version} / {source0}
name=$(/bin/awk -F: '($1~/Name/){print $2}' "${specfile}" 2>&-|tr -d ' \t')
version=$(/bin/awk -F: '($1~/Version/){print $2}' "${specfile}" 2>&-|tr -d ' \t')
source0=$(/bin/awk -F: '($1~/Source0/){print $2}' "${specfile}" 2>&-|tr -d ' \t')

if [ -z "${name}" -o -z "${version}" -o -z "${source0}" ]; then
	echo "[name/version/source0] not defined";
	exit 1;
fi

/bin/mkdir -p "${path}"/SOURCES/${name}-${version}
if [ "${TARMODE}" == "2" ]; then
	/bin/cp -arf "${basedir}"/upgrade/esop-plugingroup-mail_upgrade "${path}"/SOURCES/${name}-${version}/
fi
for p in `echo "${plugins[*]}"`
do
	/bin/cp -a "${basedir}"/${p} "${path}"/SOURCES/${name}-${version}/
	for d in conf handler opt share docs
	do
		[ -d "${path}"/SOURCES/${name}-${version}/${p}/${d} ] || {
			mkdir -p "${path}"/SOURCES/${name}-${version}/${p}/${d}
		}
	done
done
if cd "${path}"/SOURCES/; then
	if tar -czf "${source0}" ${name}-${version}; then
		if rm -rf "${path}"/SOURCES/${name}-${version}; then
			:
		else
			echo "remove at-last directory failed";
			exit 1;
		fi
	else
		echo "make tar as {source0} failed";
		exit 1;
	fi
else
	echo "change into SOURCES/ failed";
	exit 1;
fi

# if mode = {tarball}, end at here 
if [ "${TARMODE}" != "" ]; then
  echo ""${path}"/SOURCES/${source0}"
  exit 0
fi

# following codes always no need any longer
/bin/cp -a "${specfile}" "${path}"/SPECS/

cat > ~/.rpmmacros <<EOF
%_topdir ${path}/
%debug_package %{nil}
EOF

/usr/bin/rpmbuild -bb "${specfile}" >/dev/null 2>&1
find "${path}"/RPMS/ -type f -iname "*.rpm" -print
