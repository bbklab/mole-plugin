#!/bin/bash

path=$(cd $(dirname $0) && pwd)
basedir=${path%/*}

show_help(){
cat << HELP 
	${0##*/}
	${0##*/}  help
	${0##*/}  clean
	${0##*/}  {plugin}
	${0##*/}  basic tarball
	${0##*/}  mail  tarball
HELP
exit 0
}

# first: clear old files
clean(){
  rm -rf "${path}"/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS} 2>&-
  mkdir -p "${path}"/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS} 2>&-
}
clean
[ "$1" == "clean" ] && exit 0

[ -f "/usr/bin/rpmbuild" -a -x "/usr/bin/rpmbuild" ] || {
	echo "/usr/bin/rpmbuild not prepared"
	exit 1
}

if [ -z "${1}" ]; then
  specfile="${path}/spec_files/mole-plugin.spec"
  plugins=( 
	cpu_usage
	disk_fs
	disk_iostat
	disk_raid
	disk_space
	dns_svr
	fdnum
	http_svr
	imap_svr
	mail_queue
	memcache_perf
	memory
	mysql_dump
	mysql_ping
	mysql_repl
	nfs_svr
	notify_oom
	notify_syslogin
	pop_svr
	port
	process
	remote_mailtest
	smtp_svr
	ssd
	sysload
	system_dyninfo
	system_fixinfo
	tcp_conn
	traffic
  )
else

  if [ "${1}" == "help" -o "${1}" == "-h" -o "${1}" == "?" ]; then
	show_help
  elif [ "${1}" == "basic" -a "${2}" == "tarball" ]; then
	TARMODE=1
  elif [ "${1}" == "mail"  -a "${2}" == "tarball" ]; then
	TARMODE=2
  else
  	if [ -d "${basedir}/${1}" ]; then
		specfile="${path}/spec_files/${1}.spec"
		plugins=( ${1} )
  	else
		echo "plugin directory [$1] not exist"
		exit 1
  	fi
  fi

fi

if [ "${TARMODE}" == "1" ]; then	# reset specfile and plugins
  specfile="${path}/spec_files/mole-plugin.spec"
  plugins=( 
       	cpu_usage
       	disk_fs
       	disk_space
 	disk_iostat
       	memory
       	notify_oom
       	notify_syslogin
       	port
 	process
       	sysload
       	system_dyninfo
       	system_fixinfo
       	tcp_conn
       	traffic
  )
elif [ "${TARMODE}" == "2" ]; then	# reset specfile and plugins
  specfile="${path}/spec_files/mole-emplugin.spec"
  plugins=( 
	pop_svr
	dns_svr
	http_svr
	imap_svr
	smtp_svr
	mail_queue
	mysql_ping
  )
fi

name=$(awk -F: '($1~/Name/){print $2}' "${specfile}" 2>&-|tr -d ' \t')
version=$(awk -F: '($1~/Version/){print $2}' "${specfile}" 2>&-|tr -d ' \t')
source0=$(awk -F: '($1~/Source0/){print $2}' "${specfile}" 2>&-|tr -d ' \t')


mkdir -p "${path}"/SOURCES/${name}-${version}
for p in `echo "${plugins[*]}"`
do
	cp -a "${basedir}"/${p} "${path}"/SOURCES/${name}-${version}/
	for d in conf handler opt share docs
	do
		[ -d "${path}"/SOURCES/${name}-${version}/${p}/${d} ] || {
			mkdir -p "${path}"/SOURCES/${name}-${version}/${p}/${d}
		}
	done
done
cd "${path}"/SOURCES/
tar -czf "${source0}" ${name}-${version}
rm -rf "${path}"/SOURCES/${name}-${version}
if [ "${TARMODE}" != "" ]; then
  echo ""${path}"/SOURCES/${source0}"
  exit 0
fi
cp -a "${specfile}" "${path}"/SPECS/

cat > ~/.rpmmacros <<EOF
%_topdir ${path}/
%debug_package %{nil}
EOF

/usr/bin/rpmbuild -bb "${specfile}" >/dev/null 2>&1
find "${path}"/RPMS/ -type f -iname "*.rpm" -print
